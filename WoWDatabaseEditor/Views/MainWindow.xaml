<Controls:MetroWindow x:Class="WoWDatabaseEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:views="clr-namespace:WoWDatabaseEditor.Views"
        xmlns:helpers="clr-namespace:WoWDatabaseEditor.Views.Helpers"
        xmlns:viewModels="clr-namespace:WoWDatabaseEditor.ViewModels"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        Style="{DynamicResource MainWindowStyle}"
		WindowCloseButtonStyle="{DynamicResource MetroWindowButtonStyle}"
		WindowMinButtonStyle="{DynamicResource MetroWindowButtonStyle}"
		WindowMaxButtonStyle="{DynamicResource MetroWindowButtonStyle}"
        Title="{Binding Title}"
        WindowStartupLocation="CenterScreen"
        Height="695.368" 
        Width="959.421"
        Icon="/icon.png"
        Loaded="Window_Loaded"
        Closed="Window_Closed">
    <Window.Resources>
        <helpers:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
    </Window.Resources>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <StackPanel Name="menuHolder" Orientation="Horizontal">
                <Menu DockPanel.Dock="Top" Margin="2">
                    <MenuItem Header="_File">
                        <MenuItem Header="_Load" Command="{Binding ExecuteCommandNew}" Foreground="{DynamicResource MenuDefaultText}"/>
                        <MenuItem Header="_Save" Command="{Binding WindowManager.ActiveDocument.Save}" Foreground="{DynamicResource MenuDefaultText}"/>
                        <Separator />
                        <MenuItem Header="_Settings" Command="{Binding ExecuteSettings}" Foreground="{DynamicResource MenuDefaultText}"/>
                        <Separator />
                        <MenuItem Header="_Exit"  Foreground="{DynamicResource MenuDefaultText}"/>
                    </MenuItem>
                    <MenuItem Header="_Edit">
                        <MenuItem Header="_Undo" Command="{Binding WindowManager.ActiveDocument.Undo}" AutomationProperties.AcceleratorKey="z" Foreground="{DynamicResource MenuDefaultText}"/>
                        <MenuItem Header="_Redo" Command="{Binding WindowManager.ActiveDocument.Redo}" Foreground="{DynamicResource MenuDefaultText}"/>
                    </MenuItem>
                    <MenuItem Header="_View" ItemsSource="{Binding Windows}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding Command}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewModels:MenuItemViewModel}" ItemsSource="{Binding Path=MenuItems}">
                                <TextBlock Text="{Binding Header}"/>
                            </HierarchicalDataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="_Window" ItemsSource="{Binding WindowManager.OpenedDocuments}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding Command}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <HierarchicalDataTemplate>
                                <TextBlock Text="{Binding Title}"/>
                            </HierarchicalDataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="_Help" Foreground="{DynamicResource MenuDefaultText}">
                        <MenuItem Header="_About" Command="{Binding About}"></MenuItem>
                    </MenuItem>
                </Menu>
            </StackPanel>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Text="{TemplateBinding Content}"
                   TextTrimming="CharacterEllipsis"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="{DynamicResource WindowTitleFontSize}"
                   FontFamily="{DynamicResource HeaderFontFamily}" />
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>
    <DockPanel>
        <avalonDock:DockingManager AnchorablesSource="{Binding WindowManager.OpenedTools}" x:Name="DockingManager" DocumentClosed="DockingManager_OnDocumentClosed" ActiveContent="{Binding WindowManager.ActiveDocument,Mode=TwoWay, 
            diag:PresentationTraceSources.TraceLevel=High,Converter={StaticResource ActiveDocumentConverter}}" DocumentsSource="{Binding WindowManager.OpenedDocuments}" >

            <avalonDock:DockingManager.LayoutItemTemplateSelector>
                <views:PaneDocumentTemplateSelector>
                    <views:PaneDocumentTemplateSelector.DocumentTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Content}">
                            </ContentControl>
                        </DataTemplate>
                    </views:PaneDocumentTemplateSelector.DocumentTemplate>
                </views:PaneDocumentTemplateSelector>
            </avalonDock:DockingManager.LayoutItemTemplateSelector>
            <avalonDock:DockingManager.LayoutItemContainerStyle>
                <!-- you can add additional bindings from the layoutitem to the DockWindowViewModel -->
                <Style TargetType="{x:Type avalonDock:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                    <Setter Property="Visibility" Value="{Binding Model.Visibility, Mode=TwoWay}"></Setter>
                </Style>
            </avalonDock:DockingManager.LayoutItemContainerStyle>
        </avalonDock:DockingManager>
    </DockPanel>
    <!--<Grid>
        <ContentControl prism:RegionManager.RegionName="ContentRegion" >
        </ContentControl>
    </Grid>-->
</Controls:MetroWindow>

